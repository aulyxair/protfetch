# .github/workflows/ci.yml
name: protfetch CI

on:
  push:
    branches: [ main, master, develop ] # Adjust as needed
  pull_request:
    branches: [ main, master, develop ] # Adjust as needed

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[test]  # Assuming you add a [test] extra for pytest in pyproject.toml
                                # Or: pip install -e .
                                #     pip install pytest pytest-mock etc.
        # If you don't use extras for test dependencies:
        # pip install pytest pytest-mock # Add other test deps here

    - name: Lint with flake8 (optional, but good practice)
      run: |
        pip install flake8
        flake8 protfetch/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # Example: exit-zero treats all errors as warnings. Use wisely.
        # flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Format with Black (check only)
      run: |
        pip install black
        black --check .

    - name: Sort imports with isort (check only)
      run: |
        pip install isort
        isort --check-only .

    - name: Run tests
      run: |
        # You might need to set a dummy Entrez email for tests that don't mock it fully
        # export ENTREZ_EMAIL="ci@example.com" 
        pytest

  # Optional: Build and check package
  build_check:
    runs-on: ubuntu-latest
    needs: test # Run after tests pass
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') # Only on push to main/master

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x' # Use a generic recent Python for build

    - name: Install build tools
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: python -m build

    - name: Check package with twine
      run: twine check dist/*
